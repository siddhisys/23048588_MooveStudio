package com.Mooveapp.view;

import com.Moooveapp.controller.ValidationUtil;
import com.Mooveapp.model.MooveModel;
import com.Moooveapp.controller.algorithms.BinarySearch;
import com.Moooveapp.controller.algorithms.InsertionSort;
import com.Moooveapp.controller.algorithms.MergeSort;
import com.Moooveapp.controller.algorithms.SelectionSort;
import java.awt.HeadlessException;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * @author Siddhi
 * LMUID 23048588
 */
public class MooveApp extends javax.swing.JFrame {

    private List<MooveModel> scheduleList;
    private java.awt.CardLayout cardLayout;
    private final SelectionSort selectionSort;

    /**
     * Creates new form CollegeApp
     */
    public MooveApp() {
        initComponents();
        setupComboBoxListener();
        initializeLayout();
        startProgress();
        initializeData();
        selectionSort = new SelectionSort();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainScreen = new javax.swing.JPanel();
        pnlMainTitle = new javax.swing.JPanel();
        MainPane = new javax.swing.JTabbedPane();
        pnlHome = new javax.swing.JPanel();
        lblImageHomepg1 = new javax.swing.JLabel();
        pnlAboutUs = new javax.swing.JPanel();
        pnlAboutUsImg1 = new javax.swing.JPanel();
        lblBalletFeetImg = new javax.swing.JLabel();
        lblMoovename = new javax.swing.JLabel();
        lblFounderName = new javax.swing.JLabel();
        lblWelcoming = new javax.swing.JLabel();
        pnlDescMoove = new javax.swing.JPanel();
        jTextArea1 = new javax.swing.JTextArea();
        pnlInstructors = new javax.swing.JPanel();
        pnlInstructor1 = new javax.swing.JPanel();
        lblImgface1 = new javax.swing.JLabel();
        lblInstructorname1 = new javax.swing.JLabel();
        lblImgarrow1 = new javax.swing.JLabel();
        lblImgbutton1 = new javax.swing.JLabel();
        pnlInstructor2 = new javax.swing.JPanel();
        lblImgface2 = new javax.swing.JLabel();
        lblInstructorname2 = new javax.swing.JLabel();
        lblImgarrow2 = new javax.swing.JLabel();
        lblImgbutton2 = new javax.swing.JLabel();
        pnlInstructor4 = new javax.swing.JPanel();
        lblImgface4 = new javax.swing.JLabel();
        lblInstructorname4 = new javax.swing.JLabel();
        lblImgarrow4 = new javax.swing.JLabel();
        lblImgbutton4 = new javax.swing.JLabel();
        pnlInstructor5 = new javax.swing.JPanel();
        lblImgface5 = new javax.swing.JLabel();
        lblInstructorname5 = new javax.swing.JLabel();
        lblImgarrow5 = new javax.swing.JLabel();
        lblImgbutton5 = new javax.swing.JLabel();
        pnlInstructor3 = new javax.swing.JPanel();
        lblImgface3 = new javax.swing.JLabel();
        lblInstructorname3 = new javax.swing.JLabel();
        lblImgarrow3 = new javax.swing.JLabel();
        lblImgbutton3 = new javax.swing.JLabel();
        pnlInstructor6 = new javax.swing.JPanel();
        lblImgface6 = new javax.swing.JLabel();
        lblInstructorname6 = new javax.swing.JLabel();
        lblImgarrow6 = new javax.swing.JLabel();
        lblImgbutton6 = new javax.swing.JLabel();
        pnlRegister = new javax.swing.JPanel();
        pnlData = new javax.swing.JPanel();
        txtFldSerialNo = new javax.swing.JTextField();
        txtFldStartTime = new javax.swing.JTextField();
        txtFldAge = new javax.swing.JTextField();
        txtFldEndTime = new javax.swing.JTextField();
        txtFldInstructor = new javax.swing.JTextField();
        txtFldTotalStudents = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        comboSkill = new javax.swing.JComboBox<>();
        comboClassName = new javax.swing.JComboBox<>();
        pnlSchedule = new javax.swing.JPanel();
        jScrollPaneSchedulePane = new javax.swing.JScrollPane();
        tblSchedule = new javax.swing.JTable();
        btnSortSno = new javax.swing.JButton();
        btnSortInstructors = new javax.swing.JButton();
        btnSortAge = new javax.swing.JButton();
        txtFldSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        lblLogoMoove = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();
        pnlLoginScreen = new javax.swing.JPanel();
        pnlLoginScreen1 = new javax.swing.JPanel();
        lblLoginTitle = new javax.swing.JLabel();
        lblLoginSubTitle = new javax.swing.JLabel();
        txtFldLoginUsername = new javax.swing.JTextField();
        pwdFldLogin = new javax.swing.JPasswordField();
        lblPassword = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblLoginForgotPwd = new javax.swing.JLabel();
        btnLoginIn = new javax.swing.JButton();
        lblLoginError = new javax.swing.JLabel();
        lblQuote1 = new javax.swing.JLabel();
        lblQuote2 = new javax.swing.JLabel();
        lblQuote3 = new javax.swing.JLabel();
        lblQuote4 = new javax.swing.JLabel();
        lblGIFLoadingpg1 = new javax.swing.JLabel();
        pnlLoadingScreen = new javax.swing.JPanel();
        pnlLoadingpg1 = new javax.swing.JPanel();
        txtLoadingpglabel2 = new javax.swing.JLabel();
        txtLoadingpglabel1 = new javax.swing.JLabel();
        txtLoadingpglabel3 = new javax.swing.JLabel();
        txtLoadingpglabel5 = new javax.swing.JLabel();
        pgBarSplashScreen = new javax.swing.JProgressBar();
        txtLoadingpglabel7 = new javax.swing.JLabel();
        txtLoadingpglabel6 = new javax.swing.JLabel();
        imgLoadingpglbl4 = new javax.swing.JLabel();
        imgLoadingpglbl3 = new javax.swing.JLabel();
        imgLoadingpglbl1 = new javax.swing.JLabel();
        imgLoadingpglbl2 = new javax.swing.JLabel();

        pnlMainScreen.setBackground(new java.awt.Color(0, 0, 0));
        pnlMainScreen.setMaximumSize(null);
        pnlMainScreen.setMinimumSize(new java.awt.Dimension(1280, 638));
        pnlMainScreen.setPreferredSize(new java.awt.Dimension(1280, 638));

        pnlMainTitle.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout pnlMainTitleLayout = new javax.swing.GroupLayout(pnlMainTitle);
        pnlMainTitle.setLayout(pnlMainTitleLayout);
        pnlMainTitleLayout.setHorizontalGroup(
            pnlMainTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlMainTitleLayout.setVerticalGroup(
            pnlMainTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 76, Short.MAX_VALUE)
        );

        MainPane.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N

        pnlHome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblImageHomepg1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Untitled design (1).png"))); // NOI18N
        lblImageHomepg1.setText("jLabel13");
        pnlHome.add(lblImageHomepg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1270, 500));

        MainPane.addTab("Home", pnlHome);

        pnlAboutUs.setBackground(new java.awt.Color(0, 0, 0));
        pnlAboutUs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        pnlAboutUs.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlAboutUsImg1.setBackground(new java.awt.Color(204, 204, 204));

        lblBalletFeetImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Untitled design (4).png"))); // NOI18N
        lblBalletFeetImg.setText("jLabel15");

        javax.swing.GroupLayout pnlAboutUsImg1Layout = new javax.swing.GroupLayout(pnlAboutUsImg1);
        pnlAboutUsImg1.setLayout(pnlAboutUsImg1Layout);
        pnlAboutUsImg1Layout.setHorizontalGroup(
            pnlAboutUsImg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutUsImg1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBalletFeetImg, javax.swing.GroupLayout.PREFERRED_SIZE, 444, Short.MAX_VALUE))
        );
        pnlAboutUsImg1Layout.setVerticalGroup(
            pnlAboutUsImg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblBalletFeetImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlAboutUs.add(pnlAboutUsImg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 490));

        lblMoovename.setFont(new java.awt.Font("STHupo", 1, 24)); // NOI18N
        lblMoovename.setForeground(new java.awt.Color(153, 153, 153));
        lblMoovename.setText("MOOVE");
        pnlAboutUs.add(lblMoovename, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, 90, 50));

        lblFounderName.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        lblFounderName.setForeground(new java.awt.Color(255, 255, 255));
        lblFounderName.setText("NORTH BOUND");
        pnlAboutUs.add(lblFounderName, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 300, 40));

        lblWelcoming.setFont(new java.awt.Font("Segoe UI", 0, 17)); // NOI18N
        lblWelcoming.setForeground(new java.awt.Color(255, 255, 255));
        lblWelcoming.setText("Welcome to MOOVE – Where Passion Meets Precision!");
        pnlAboutUs.add(lblWelcoming, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 130, 440, -1));

        pnlDescMoove.setBackground(new java.awt.Color(0, 0, 0));

        jTextArea1.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Segoe UI Emoji", 0, 15)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jTextArea1.setText("\nFounded by the visionary dancer and choreographer North Bound, MOOVE isn’t just a dance academy—it’s a\nmovement, a rhythm, a way of life.  We believe that dance is more than just steps; it’s a language, an art, and\nan expression of the soul.\nAt MOOVE, we cater to dancers of all levels—whether you’re a beginner taking your first steps or a seasoned \ndancer perfecting your craft. With a diverse range of styles and techniques, our experienced  instructors will\nguide you to find your unique groove and rhythm.\n\n“We don’t just teach dance—we ignite passion, build confidence, and create lifelong memories.”\n\n“Don’t just follow the rhythm—own it. At MOOVE, the floor is yours.”\n\n\n\n");
        jTextArea1.setAutoscrolls(false);
        jTextArea1.setBorder(null);
        jTextArea1.setRequestFocusEnabled(false);

        javax.swing.GroupLayout pnlDescMooveLayout = new javax.swing.GroupLayout(pnlDescMoove);
        pnlDescMoove.setLayout(pnlDescMooveLayout);
        pnlDescMooveLayout.setHorizontalGroup(
            pnlDescMooveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
            .addGroup(pnlDescMooveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlDescMooveLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        pnlDescMooveLayout.setVerticalGroup(
            pnlDescMooveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
            .addGroup(pnlDescMooveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlDescMooveLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pnlAboutUs.add(pnlDescMoove, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 190, 750, 270));

        MainPane.addTab("About Us", pnlAboutUs);

        pnlInstructors.setBackground(new java.awt.Color(51, 51, 51));

        pnlInstructor1.setBackground(new java.awt.Color(255, 255, 255));
        pnlInstructor1.setPreferredSize(new java.awt.Dimension(315, 219));

        lblImgface1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Untitled design (5).png"))); // NOI18N

        lblInstructorname1.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        lblInstructorname1.setText("Fay Joyce");

        lblImgarrow1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/arrow (1).png"))); // NOI18N

        lblImgbutton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/button (1).png"))); // NOI18N

        javax.swing.GroupLayout pnlInstructor1Layout = new javax.swing.GroupLayout(pnlInstructor1);
        pnlInstructor1.setLayout(pnlInstructor1Layout);
        pnlInstructor1Layout.setHorizontalGroup(
            pnlInstructor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInstructor1Layout.createSequentialGroup()
                .addComponent(lblImgface1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlInstructor1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImgbutton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(lblInstructorname1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblImgarrow1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlInstructor1Layout.setVerticalGroup(
            pnlInstructor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInstructor1Layout.createSequentialGroup()
                .addGroup(pnlInstructor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlInstructor1Layout.createSequentialGroup()
                        .addComponent(lblImgface1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInstructor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInstructor1Layout.createSequentialGroup()
                                .addComponent(lblInstructorname1)
                                .addGap(0, 13, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInstructor1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblImgbutton1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlInstructor1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblImgarrow1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pnlInstructor2.setBackground(new java.awt.Color(255, 255, 255));

        lblImgface2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/A.png"))); // NOI18N

        lblInstructorname2.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        lblInstructorname2.setText("Arron Cox");

        lblImgarrow2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/arrow (1).png"))); // NOI18N

        lblImgbutton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/button2 (1).png"))); // NOI18N
        lblImgbutton2.setText("hi");

        javax.swing.GroupLayout pnlInstructor2Layout = new javax.swing.GroupLayout(pnlInstructor2);
        pnlInstructor2.setLayout(pnlInstructor2Layout);
        pnlInstructor2Layout.setHorizontalGroup(
            pnlInstructor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInstructor2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImgbutton2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblInstructorname2)
                .addGap(38, 38, 38)
                .addComponent(lblImgarrow2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(lblImgface2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlInstructor2Layout.setVerticalGroup(
            pnlInstructor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInstructor2Layout.createSequentialGroup()
                .addComponent(lblImgface2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInstructor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInstructor2Layout.createSequentialGroup()
                        .addComponent(lblInstructorname2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInstructor2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlInstructor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblImgarrow2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblImgbutton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        pnlInstructor4.setBackground(new java.awt.Color(255, 255, 255));

        lblImgface4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/A (2).png"))); // NOI18N

        lblInstructorname4.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        lblInstructorname4.setText("Tatiana Logan");

        lblImgarrow4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/arrow (1).png"))); // NOI18N

        lblImgbutton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/button (1).png"))); // NOI18N

        javax.swing.GroupLayout pnlInstructor4Layout = new javax.swing.GroupLayout(pnlInstructor4);
        pnlInstructor4.setLayout(pnlInstructor4Layout);
        pnlInstructor4Layout.setHorizontalGroup(
            pnlInstructor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImgface4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInstructor4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImgbutton4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblInstructorname4)
                .addGap(23, 23, 23)
                .addComponent(lblImgarrow4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlInstructor4Layout.setVerticalGroup(
            pnlInstructor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInstructor4Layout.createSequentialGroup()
                .addComponent(lblImgface4, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlInstructor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInstructor4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblInstructorname4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInstructor4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlInstructor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblImgbutton4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblImgarrow4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        pnlInstructor5.setBackground(new java.awt.Color(255, 255, 255));

        lblImgface5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/A (3).png"))); // NOI18N

        lblInstructorname5.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        lblInstructorname5.setText("Enzo Bryant");

        lblImgarrow5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/arrow (1).png"))); // NOI18N

        lblImgbutton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/button2 (1).png"))); // NOI18N
        lblImgbutton5.setText("hi");

        javax.swing.GroupLayout pnlInstructor5Layout = new javax.swing.GroupLayout(pnlInstructor5);
        pnlInstructor5.setLayout(pnlInstructor5Layout);
        pnlInstructor5Layout.setHorizontalGroup(
            pnlInstructor5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImgface5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlInstructor5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImgbutton5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblInstructorname5)
                .addGap(33, 33, 33)
                .addComponent(lblImgarrow5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlInstructor5Layout.setVerticalGroup(
            pnlInstructor5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInstructor5Layout.createSequentialGroup()
                .addComponent(lblImgface5, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlInstructor5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInstructor5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblInstructorname5)
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInstructor5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlInstructor5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblImgbutton5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblImgarrow5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        pnlInstructor3.setBackground(new java.awt.Color(255, 255, 255));

        lblImgface3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/A (1).png"))); // NOI18N

        lblInstructorname3.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        lblInstructorname3.setText("Zakaria Baxter");

        lblImgarrow3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/arrow (1).png"))); // NOI18N

        lblImgbutton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/button3 (1).png"))); // NOI18N

        javax.swing.GroupLayout pnlInstructor3Layout = new javax.swing.GroupLayout(pnlInstructor3);
        pnlInstructor3.setLayout(pnlInstructor3Layout);
        pnlInstructor3Layout.setHorizontalGroup(
            pnlInstructor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInstructor3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImgbutton3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlInstructor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInstructor3Layout.createSequentialGroup()
                        .addComponent(lblInstructorname3)
                        .addGap(21, 21, 21)
                        .addComponent(lblImgarrow3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInstructor3Layout.createSequentialGroup()
                        .addComponent(lblImgface3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72))))
        );
        pnlInstructor3Layout.setVerticalGroup(
            pnlInstructor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInstructor3Layout.createSequentialGroup()
                .addComponent(lblImgface3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInstructorname3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInstructor3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlInstructor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblImgarrow3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblImgbutton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlInstructor6.setBackground(new java.awt.Color(255, 255, 255));

        lblImgface6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/A (4).png"))); // NOI18N

        lblInstructorname6.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        lblInstructorname6.setText("Colby Lester");

        lblImgarrow6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/arrow (1).png"))); // NOI18N

        lblImgbutton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/button3 (1).png"))); // NOI18N

        javax.swing.GroupLayout pnlInstructor6Layout = new javax.swing.GroupLayout(pnlInstructor6);
        pnlInstructor6.setLayout(pnlInstructor6Layout);
        pnlInstructor6Layout.setHorizontalGroup(
            pnlInstructor6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImgface6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInstructor6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImgbutton6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblInstructorname6)
                .addGap(31, 31, 31)
                .addComponent(lblImgarrow6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlInstructor6Layout.setVerticalGroup(
            pnlInstructor6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInstructor6Layout.createSequentialGroup()
                .addComponent(lblImgface6, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlInstructor6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInstructor6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblInstructorname6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInstructor6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlInstructor6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblImgbutton6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblImgarrow6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout pnlInstructorsLayout = new javax.swing.GroupLayout(pnlInstructors);
        pnlInstructors.setLayout(pnlInstructorsLayout);
        pnlInstructorsLayout.setHorizontalGroup(
            pnlInstructorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInstructorsLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(pnlInstructorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlInstructor4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlInstructor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(104, 104, 104)
                .addGroup(pnlInstructorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlInstructor5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlInstructor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(104, 104, 104)
                .addGroup(pnlInstructorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlInstructor3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlInstructor6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        pnlInstructorsLayout.setVerticalGroup(
            pnlInstructorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInstructorsLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(pnlInstructorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlInstructor3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlInstructor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlInstructor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInstructorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlInstructor5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlInstructor4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlInstructor6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 19, Short.MAX_VALUE))
        );

        MainPane.addTab("Instructors", pnlInstructors);

        pnlData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));
        pnlData.setForeground(new java.awt.Color(255, 255, 255));

        txtFldSerialNo.setBackground(new java.awt.Color(242, 242, 242));
        txtFldSerialNo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "S. NO.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        txtFldStartTime.setBackground(new java.awt.Color(242, 242, 242));
        txtFldStartTime.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Start Time", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        txtFldAge.setBackground(new java.awt.Color(242, 242, 242));
        txtFldAge.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Age", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        txtFldEndTime.setBackground(new java.awt.Color(242, 242, 242));
        txtFldEndTime.setBorder(javax.swing.BorderFactory.createTitledBorder("End Time"));

        txtFldInstructor.setEditable(false);
        txtFldInstructor.setBorder(javax.swing.BorderFactory.createTitledBorder("Instructor"));

        txtFldTotalStudents.setBackground(new java.awt.Color(242, 242, 242));
        txtFldTotalStudents.setBorder(javax.swing.BorderFactory.createTitledBorder("Total Students"));

        addBtn.setFont(new java.awt.Font("Segoe UI Historic", 3, 18)); // NOI18N
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        updatebtn.setFont(new java.awt.Font("Segoe UI Historic", 3, 18)); // NOI18N
        updatebtn.setText("Update");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        deletebtn.setFont(new java.awt.Font("Segoe UI Historic", 3, 18)); // NOI18N
        deletebtn.setText("Delete");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        comboSkill.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Beginner", "Advanced", "Intermediate" }));
        comboSkill.setBorder(javax.swing.BorderFactory.createTitledBorder("Skill Level"));

        comboClassName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ballet", "Hip-Hop", "Contemporary", "The Robot", "Waacking", "B-Boying" }));
        comboClassName.setBorder(javax.swing.BorderFactory.createTitledBorder("Class Name"));

        javax.swing.GroupLayout pnlDataLayout = new javax.swing.GroupLayout(pnlData);
        pnlData.setLayout(pnlDataLayout);
        pnlDataLayout.setHorizontalGroup(
            pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDataLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFldSerialNo, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(comboSkill, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(71, 71, 71)
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFldAge, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(comboClassName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(61, 61, 61)
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtFldStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFldTotalStudents, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDataLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(txtFldEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDataLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFldInstructor, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDataLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138)
                .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147)
                .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(214, 214, 214))
        );
        pnlDataLayout.setVerticalGroup(
            pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDataLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboClassName, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFldSerialNo, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFldStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFldEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboSkill, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFldAge, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFldTotalStudents, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFldInstructor, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(82, 82, 82)
                .addGroup(pnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(130, Short.MAX_VALUE))
        );

        txtFldSerialNo.getAccessibleContext().setAccessibleName("S. NO");

        javax.swing.GroupLayout pnlRegisterLayout = new javax.swing.GroupLayout(pnlRegister);
        pnlRegister.setLayout(pnlRegisterLayout);
        pnlRegisterLayout.setHorizontalGroup(
            pnlRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlRegisterLayout.setVerticalGroup(
            pnlRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlData, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPane.addTab("Register", pnlRegister);

        tblSchedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. NO.", "Class Name", "Start Time", "End Time", "Skill Level", "Age", "Total Students", "Instructor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneSchedulePane.setViewportView(tblSchedule);
        if (tblSchedule.getColumnModel().getColumnCount() > 0) {
            tblSchedule.getColumnModel().getColumn(0).setResizable(false);
            tblSchedule.getColumnModel().getColumn(1).setResizable(false);
            tblSchedule.getColumnModel().getColumn(2).setResizable(false);
            tblSchedule.getColumnModel().getColumn(3).setResizable(false);
            tblSchedule.getColumnModel().getColumn(4).setResizable(false);
            tblSchedule.getColumnModel().getColumn(5).setResizable(false);
            tblSchedule.getColumnModel().getColumn(6).setResizable(false);
            tblSchedule.getColumnModel().getColumn(7).setResizable(false);
        }

        btnSortSno.setBackground(new java.awt.Color(0, 0, 0));
        btnSortSno.setFont(new java.awt.Font("Stencil", 1, 18)); // NOI18N
        btnSortSno.setForeground(new java.awt.Color(255, 255, 255));
        btnSortSno.setText("SORT by S. No.");
        btnSortSno.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnSortSno.setPreferredSize(new java.awt.Dimension(82, 38));
        btnSortSno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortSnoActionPerformed(evt);
            }
        });

        btnSortInstructors.setBackground(new java.awt.Color(0, 0, 0));
        btnSortInstructors.setFont(new java.awt.Font("Stencil", 1, 18)); // NOI18N
        btnSortInstructors.setForeground(new java.awt.Color(255, 255, 255));
        btnSortInstructors.setText("SORT BY INSTRUCTORS");
        btnSortInstructors.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnSortInstructors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortInstructorsActionPerformed(evt);
            }
        });

        btnSortAge.setBackground(new java.awt.Color(0, 0, 0));
        btnSortAge.setFont(new java.awt.Font("Stencil", 1, 18)); // NOI18N
        btnSortAge.setForeground(new java.awt.Color(255, 255, 255));
        btnSortAge.setText("sort by age");
        btnSortAge.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnSortAge.setMaximumSize(new java.awt.Dimension(211, 21));
        btnSortAge.setMinimumSize(new java.awt.Dimension(211, 21));
        btnSortAge.setPreferredSize(new java.awt.Dimension(211, 21));
        btnSortAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortAgeActionPerformed(evt);
            }
        });

        txtFldSearch.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        txtFldSearch.setText("Search by Serial Number\n");

        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlScheduleLayout = new javax.swing.GroupLayout(pnlSchedule);
        pnlSchedule.setLayout(pnlScheduleLayout);
        pnlScheduleLayout.setHorizontalGroup(
            pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlScheduleLayout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(jScrollPaneSchedulePane, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlScheduleLayout.createSequentialGroup()
                .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlScheduleLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(btnSortSno, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlScheduleLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlScheduleLayout.createSequentialGroup()
                        .addComponent(btnSortInstructors, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(163, 163, 163)
                        .addComponent(btnSortAge, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(118, 118, 118))
        );
        pnlScheduleLayout.setVerticalGroup(
            pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlScheduleLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSortAge, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSortInstructors, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSortSno, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFldSearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneSchedulePane, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        MainPane.addTab("Schedule", pnlSchedule);

        lblLogoMoove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Untitled design (3).png"))); // NOI18N
        lblLogoMoove.setText("jLabel14");

        btnLogOut.setBackground(new java.awt.Color(0, 0, 0));
        btnLogOut.setFont(new java.awt.Font("Sigmar One", 1, 18)); // NOI18N
        btnLogOut.setForeground(new java.awt.Color(255, 255, 255));
        btnLogOut.setText("EXIT");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainScreenLayout = new javax.swing.GroupLayout(pnlMainScreen);
        pnlMainScreen.setLayout(pnlMainScreenLayout);
        pnlMainScreenLayout.setHorizontalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainScreenLayout.createSequentialGroup()
                        .addComponent(MainPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(pnlMainScreenLayout.createSequentialGroup()
                        .addComponent(lblLogoMoove, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 995, Short.MAX_VALUE)
                        .addComponent(btnLogOut)
                        .addGap(56, 56, 56)))
                .addComponent(pnlMainTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlMainScreenLayout.setVerticalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlMainTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlMainScreenLayout.createSequentialGroup()
                        .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLogoMoove, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MainPane, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pnlLoginScreen.setMinimumSize(new java.awt.Dimension(1280, 638));
        pnlLoginScreen.setOpaque(false);
        pnlLoginScreen.setPreferredSize(new java.awt.Dimension(1280, 638));
        pnlLoginScreen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlLoginScreen1.setBackground(new java.awt.Color(255, 153, 153));
        pnlLoginScreen1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        pnlLoginScreen1.setOpaque(false);

        lblLoginTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblLoginTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblLoginTitle.setText("Sign in ");

        lblLoginSubTitle.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        lblLoginSubTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblLoginSubTitle.setText("Please enter your login info for using Moove");

        txtFldLoginUsername.setText("ADMIN");

        pwdFldLogin.setText("admin");

        lblPassword.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword.setText("Password");

        lblUsername.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername.setText("Username");

        lblLoginForgotPwd.setFont(new java.awt.Font("Segoe UI Historic", 1, 10)); // NOI18N
        lblLoginForgotPwd.setForeground(new java.awt.Color(255, 255, 255));
        lblLoginForgotPwd.setText("Forgot your password?");

        btnLoginIn.setBackground(new java.awt.Color(204, 204, 204));
        btnLoginIn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLoginIn.setText("Login");
        btnLoginIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginInActionPerformed(evt);
            }
        });

        lblLoginError.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout pnlLoginScreen1Layout = new javax.swing.GroupLayout(pnlLoginScreen1);
        pnlLoginScreen1.setLayout(pnlLoginScreen1Layout);
        pnlLoginScreen1Layout.setHorizontalGroup(
            pnlLoginScreen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginScreen1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblLoginForgotPwd)
                .addGap(161, 161, 161))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginScreen1Layout.createSequentialGroup()
                .addContainerGap(138, Short.MAX_VALUE)
                .addGroup(pnlLoginScreen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUsername)
                    .addComponent(lblPassword)
                    .addGroup(pnlLoginScreen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginScreen1Layout.createSequentialGroup()
                            .addComponent(btnLoginIn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(121, 121, 121))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginScreen1Layout.createSequentialGroup()
                            .addComponent(pwdFldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(86, 86, 86)))
                    .addGroup(pnlLoginScreen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblLoginSubTitle)
                        .addComponent(txtFldLoginUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(pnlLoginScreen1Layout.createSequentialGroup()
                .addGroup(pnlLoginScreen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoginScreen1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(lblLoginTitle))
                    .addComponent(lblLoginError, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlLoginScreen1Layout.setVerticalGroup(
            pnlLoginScreen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginScreen1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lblLoginError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                .addComponent(lblLoginTitle)
                .addGap(18, 18, 18)
                .addComponent(lblLoginSubTitle)
                .addGap(43, 43, 43)
                .addComponent(lblUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFldLoginUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pwdFldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(btnLoginIn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblLoginForgotPwd)
                .addGap(103, 103, 103))
        );

        txtFldLoginUsername.getAccessibleContext().setAccessibleName("Username");
        pwdFldLogin.getAccessibleContext().setAccessibleName("Password");

        pnlLoginScreen.add(pnlLoginScreen1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, -1, 640));
        pnlLoginScreen1.getAccessibleContext().setAccessibleName("Username");

        lblQuote1.setFont(new java.awt.Font("SimSun-ExtB", 1, 36)); // NOI18N
        lblQuote1.setText("So darling,");
        pnlLoginScreen.add(lblQuote1, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 380, 220, 80));

        lblQuote2.setFont(new java.awt.Font("SimSun-ExtB", 1, 36)); // NOI18N
        lblQuote2.setText("save the ");
        pnlLoginScreen.add(lblQuote2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 440, 180, 50));

        lblQuote3.setFont(new java.awt.Font("SimSun-ExtB", 1, 36)); // NOI18N
        lblQuote3.setText(" for me");
        pnlLoginScreen.add(lblQuote3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 520, 150, 60));

        lblQuote4.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        lblQuote4.setText("last dance");
        pnlLoginScreen.add(lblQuote4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 480, 270, 60));

        lblGIFLoadingpg1.setBackground(new java.awt.Color(204, 204, 204));
        lblGIFLoadingpg1.setForeground(new java.awt.Color(255, 255, 255));
        lblGIFLoadingpg1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/final.gif"))); // NOI18N
        lblGIFLoadingpg1.setText("hi world, this is me");
        pnlLoginScreen.add(lblGIFLoadingpg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 640));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CollegeApp");
        setMaximumSize(new java.awt.Dimension(1280, 638));
        setMinimumSize(new java.awt.Dimension(1280, 638));
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 638));

        pnlLoadingScreen.setBackground(new java.awt.Color(255, 255, 255));
        pnlLoadingScreen.setMaximumSize(new java.awt.Dimension(1280, 638));
        pnlLoadingScreen.setMinimumSize(new java.awt.Dimension(1280, 638));
        pnlLoadingScreen.setPreferredSize(new java.awt.Dimension(1280, 638));
        pnlLoadingScreen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlLoadingpg1.setBackground(new java.awt.Color(0, 0, 0));

        txtLoadingpglabel2.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        txtLoadingpglabel2.setForeground(new java.awt.Color(255, 255, 255));
        txtLoadingpglabel2.setText("YOUR");

        txtLoadingpglabel1.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        txtLoadingpglabel1.setForeground(new java.awt.Color(255, 255, 255));
        txtLoadingpglabel1.setText("REACH");

        txtLoadingpglabel3.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        txtLoadingpglabel3.setForeground(new java.awt.Color(255, 255, 255));
        txtLoadingpglabel3.setText("HIGHEST");

        txtLoadingpglabel5.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        txtLoadingpglabel5.setForeground(new java.awt.Color(255, 255, 255));
        txtLoadingpglabel5.setText("POTENTIAL");

        pgBarSplashScreen.setForeground(new java.awt.Color(255, 255, 255));
        pgBarSplashScreen.setMaximumSize(new java.awt.Dimension(1000, 4));

        txtLoadingpglabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        txtLoadingpglabel7.setForeground(new java.awt.Color(255, 255, 255));
        txtLoadingpglabel7.setText("and classes especially altered for you.");

        txtLoadingpglabel6.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        txtLoadingpglabel6.setForeground(new java.awt.Color(255, 255, 255));
        txtLoadingpglabel6.setText("With the best instructors from around the world ");

        javax.swing.GroupLayout pnlLoadingpg1Layout = new javax.swing.GroupLayout(pnlLoadingpg1);
        pnlLoadingpg1.setLayout(pnlLoadingpg1Layout);
        pnlLoadingpg1Layout.setHorizontalGroup(
            pnlLoadingpg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoadingpg1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlLoadingpg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pgBarSplashScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlLoadingpg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtLoadingpglabel7)
                        .addComponent(txtLoadingpglabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                        .addComponent(txtLoadingpglabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtLoadingpglabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtLoadingpglabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtLoadingpglabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlLoadingpg1Layout.setVerticalGroup(
            pnlLoadingpg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoadingpg1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(txtLoadingpglabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLoadingpglabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLoadingpglabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLoadingpglabel5)
                .addGap(60, 60, 60)
                .addComponent(txtLoadingpglabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLoadingpglabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                .addComponent(pgBarSplashScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );

        pnlLoadingScreen.add(pnlLoadingpg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 0, 380, 640));

        imgLoadingpglbl4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Hip hop.jpeg"))); // NOI18N
        pnlLoadingScreen.add(imgLoadingpglbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 0, -1, -1));

        imgLoadingpglbl3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/download (22).jpeg"))); // NOI18N
        pnlLoadingScreen.add(imgLoadingpglbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 470, 240));

        imgLoadingpglbl1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hip hop idea_.jpeg"))); // NOI18N
        pnlLoadingScreen.add(imgLoadingpglbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 179, 400));

        imgLoadingpglbl2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/This image represents to me a combination of using….jpeg"))); // NOI18N
        imgLoadingpglbl2.setText("jLabel1");
        pnlLoadingScreen.add(imgLoadingpglbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 290, 400));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This method is called for assisting the user in the system.
     * The method validates all the possible input that the user can enter and provides a
     * suitable message for each error.
     */
    private void btnLoginInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginInActionPerformed
        // Get the username and password input
        String username = txtFldLoginUsername.getText();
        String password = new String(pwdFldLogin.getPassword());
        // Check if username or password is empty
        if (username.isEmpty() && password.isEmpty()) {
            lblLoginError.setText("Please enter your username and password.");
        } else if (username.isEmpty()) {
            lblLoginError.setText("Please enter your username.");
        } else if (password.isEmpty()) {
            lblLoginError.setText("Please enter your password.");
        } 
        // Check if username is incorrect but password is correct
        else if (!username.equals("ADMIN") && password.equals("admin")) {
            lblLoginError.setText("Username is incorrect.");
        } 
        // Check if username is correct but password is incorrect
        else if (username.equals("ADMIN") && !password.equals("admin")) {
            lblLoginError.setText("Password is incorrect.");
        } 
        // Check if both username and password are incorrect
        else if (!username.equals("ADMIN") || !password.equals("admin")) {
            lblLoginError.setText("Username and password mismatch.");
        } 
        // If credentials are correct, proceed to load the main screen
        else {
            lblLoginError.setText(""); // Clear any previous error messages
            loadScreen("MainScreen"); // Load the main screen
        }
    }//GEN-LAST:event_btnLoginInActionPerformed

    
    /**
     * This method assists the user to log out of the system.
     * The system simply logs out the user from the main system to the login screen.
     */
    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed

        pwdFldLogin.setText("");
        txtFldLoginUsername.setText("");
        loadScreen("LoginScreen"); // Load the main screen

    }//GEN-LAST:event_btnLogOutActionPerformed

    /**
     * This method handles the event triggered when the "SEARCH" button is clicked.
     * The method helps in validation during searching process.
     * The methods sorts the list of serial number in ascending order before providing for the searched data.
     * It implements the searching using binary search.
     */
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // Step 1: Check if the input field is empty
        String searchKey = txtFldSearch.getText().trim();
        if (searchKey.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please enter a serial number to search.", "Input Error",
                javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }
        // Step 2: Validate that the input is a valid integer
        int serialNo;
        try {
            serialNo = Integer.parseInt(searchKey);
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Invalid serial number. Please enter a valid integer.", "Input Error",
                javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Step 3: Ensure the scheduleList is not null or empty
        if (scheduleList == null || scheduleList.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "The schedule list is empty.", "Data Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Step 4: Sort the list by serial number
        SelectionSort selectionSort = new SelectionSort();
        List<MooveModel> sortedList = selectionSort.sortByserialNo(scheduleList, false); // Ascending order

        // Step 5: Perform binary search
        BinarySearch search = new BinarySearch();
        MooveModel searchedData = search.searchBySerialNo(serialNo, sortedList, 0, sortedList.size() - 1);

        // Step 6: Display results in the table
        if (searchedData != null) {
            // Create a list containing the searched data
            List<MooveModel> updateList = new ArrayList<>();
            updateList.add(searchedData);

            // Load the updated list into the table
            addToTable(updateList);
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Sorry, serial number not found.", "Search Result",
                javax.swing.JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * This method helps the user sort the data present in the table using the age data.
     * The method uses merge sort to implement the sorting.
     * The method sorts the data in ascending order, informing the user too.
     */
    private void btnSortAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortAgeActionPerformed
        try {
            // Create an instance of the MergeSortAge class
            MergeSort mergeSortAge = new MergeSort();

            // Specify the sorting order: true for descending, false for ascending
            boolean isDesc = false; // Set to true for descending order, or false for ascending order

            // Perform the sorting operation
            List<MooveModel> sortedList = mergeSortAge.sortByAge(scheduleList, isDesc);

            // Update the scheduleList with the sorted list
            scheduleList = sortedList;

            // Display the sorted list in the console (or update the UI if applicable)
            System.out.println("List sorted by age:");
            for (MooveModel model : scheduleList) {
                System.out.println("Class: " + model.getClassName() + ", Age: " + model.getAge());
            }

            // Optionally update the UI (e.g., a JTable)
            addToTable(scheduleList); // Replace with your method to refresh the table

            // Show a success message to the user
            JOptionPane.showMessageDialog(this, "List sorted by age successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (IllegalArgumentException ex) {
            // Handle case where the list is null or empty
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (HeadlessException ex) {
            // Handle any unexpected errors
            JOptionPane.showMessageDialog(this, "An error occurred while sorting by age.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSortAgeActionPerformed

    /**
     * This method helps the user sort the data present in the table using the instructor data.
     * The method uses insertion sort to implement the sorting.
     * The method sorts the data in ascending order, informing the user too.
     */
    private void btnSortInstructorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortInstructorsActionPerformed
        // Instantiate the InsertionSort class
        InsertionSort insertionSort = new InsertionSort();

        // Perform the sort on the scheduleList (set `false` for ascending, `true` for descending)
        List<MooveModel> sortedList = insertionSort.sortByInstructor(scheduleList, false); // Change to 'true' for descending order

        // Update the table with the sorted data
        addToTable(sortedList);

        // Optionally show a success message
        JOptionPane.showMessageDialog(this, "Sorted by Instructor Name in Ascending Order!", "Sorting Complete", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnSortInstructorsActionPerformed

    /**
     * This method helps the user sort the data present in the table by the serial number.
     * The method uses selection sort to implement the sorting. 
     * The method sorts the data in ascending order, informing the user too.
     */
    private void btnSortSnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortSnoActionPerformed
        // Sort the scheduleList by Serial No
        List<MooveModel> sortedList = selectionSort.sortByserialNo(scheduleList, false);

        // Add the sorted data to the table (clears and updates)
        addToTable(sortedList);

        // Display a success message
        JOptionPane.showMessageDialog(this, "Sorting by Serial Number completed successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnSortSnoActionPerformed

    /**
     * This method is called when the user calls for deleting the data that is already in the table.
     * It provides validation, it only deletes the data once the serial number exists in the table.
     */
    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed

        // Get the Serial Number from the text field
        String serialNo = txtFldSerialNo.getText();

        // Check if Serial Number is empty
        if (serialNo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Serial Number is required.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Confirm with the user before deleting
        int confirmation = JOptionPane.showConfirmDialog(this,
            "Are you sure you want to delete the record with Serial Number: " + serialNo + "?",
            "Confirm Delete",
            JOptionPane.YES_NO_OPTION);

        // If the user selects "No", it returns back to the register page without doing nothing.
        if (confirmation != JOptionPane.YES_OPTION) {
            return;
        }

        // Get the table model
        DefaultTableModel model = (DefaultTableModel) tblSchedule.getModel();
        boolean found = false;

        // Loop through the table to find the matching Serial Number
        for (int i = 0; i < model.getRowCount(); i++) {
            // Check if the value at column 0 (Serial No) is not null before calling toString
            Object serialValue = model.getValueAt(i, 0);
            if (serialValue != null && serialValue.toString().equals(serialNo)) {
                // Remove the row if Serial No matches
                model.removeRow(i);
                found = true;
                break;
            }
        }

        // Display success or error message
        if (found) {
            JOptionPane.showMessageDialog(this, "Record deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Serial Number not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        // Clear the fields after adding
        clearFields();
    }//GEN-LAST:event_deletebtnActionPerformed

    /**
     * This method is called when the user wants to update the data that is previously inserted in the table.
     * This methods allows the user to update the data related to only time, i.e., start time and end time. 
     * It also allows for validation for time.
     */
    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // Get field values
        String serialNo = txtFldSerialNo.getText().trim();
        String newStartTime = txtFldStartTime.getText().trim();
        String newEndTime = txtFldEndTime.getText().trim();

        // Check if all fields are empty
        if (serialNo.isEmpty() && newStartTime.isEmpty() && newEndTime.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are required. Please fill in the details.", "Validation Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Check if some fields are missing
        if (serialNo.isEmpty() || newStartTime.isEmpty() || newEndTime.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Incomplete details provided. Please fill in all required fields.",
                "Validation Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Get the table model
        DefaultTableModel model = (DefaultTableModel) tblSchedule.getModel();
        boolean found = false;

        // Loop through the table to find the matching Serial Number
        for (int i = 0; i < model.getRowCount(); i++) {
            // Check if the value at column 0 (Serial No) matches
            Object serialValue = model.getValueAt(i, 0);
            if (serialValue != null && serialValue.toString().equals(serialNo)) {
                // Validate the new Start and End Time before updating
                if (!ValidationUtil.isValidTime(newStartTime)) {
                    JOptionPane.showMessageDialog(this, "Invalid Start Time. Must be in format HH:MM AM/PM.", "Validation Error",
                        JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (!ValidationUtil.isValidTime(newEndTime)) {
                    JOptionPane.showMessageDialog(this, "Invalid End Time. Must be in format HH:MM AM/PM.", "Validation Error",
                        JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // Update only the Start Time and End Time in the table
                model.setValueAt(newStartTime, i, 2);  // Start Time (Column 2)
                model.setValueAt(newEndTime, i, 3);    // End Time (Column 3)

                found = true;
                break;
            }
        }

        // Display success or error message for updation of the record
        if (found) {
            JOptionPane.showMessageDialog(this, "Record updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            tblSchedule.setVisible(true);
            tblSchedule.repaint();
            tblSchedule.revalidate();
        } else {
            JOptionPane.showMessageDialog(this, "Serial Number not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        // Clear the fields after updating
        clearFields();
    }//GEN-LAST:event_updatebtnActionPerformed

    /**
     * 
     * This method is called for when the user wants to enter the data into the system.
     * The method helps in inserting all the data from the fields into the table by validating
     * all the fields and providing suitable message in case of any error.
     */
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        String serialNo = txtFldSerialNo.getText(); //get serial number from the textfield
        String className = comboClassName.getSelectedItem().toString(); //get class name from the combobox
        String startTime = txtFldStartTime.getText(); //get start time from the textfield
        String age = txtFldAge.getText(); //get age from the textfield
        String skillLevel = comboSkill.getSelectedItem().toString(); //get skill level from the combobox
        String endTime = txtFldEndTime.getText(); //get end time from the textfield
        String instructor = txtFldInstructor.getText(); //get instructor from the textfield
        String totalStudents = txtFldTotalStudents.getText(); //get total student from the textfield

        // Check for empty fields
        if (serialNo.isEmpty() || className.isEmpty() || startTime.isEmpty() || age.isEmpty()
            || skillLevel.isEmpty() || endTime.isEmpty() || instructor.isEmpty() || totalStudents.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are required. Please fill in all details.", "Validation Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }

        //The code prevents the same serial number from being entered again
        DefaultTableModel model = (DefaultTableModel) tblSchedule.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            String existingSerialNo = model.getValueAt(i, 0).toString();
            if (existingSerialNo.equals(serialNo)) {
                JOptionPane.showMessageDialog(this, "Serial Number already exists.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        // Specific validation checks
        //validation for invalid serial number
        if (!ValidationUtil.isValidSerialNo(serialNo)) {
            JOptionPane.showMessageDialog(this, "Invalid Serial Number. It must contain only digits.", "Validation Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }

        //validation for invalid age
        if (!ValidationUtil.isValidAge(age)) {
            JOptionPane.showMessageDialog(this, "Invalid Age. Age can only be numbers.\nAge can only be 2 digit", "Validation Error",

                JOptionPane.ERROR_MESSAGE);
            return;
        }

        //validation for invalid time
        if (!ValidationUtil.isValidTime(startTime) || !ValidationUtil.isValidTime(endTime)) {
            JOptionPane.showMessageDialog(this, "Invalid Time format. Please use the 12-hour format (e.g., 01:00 PM).",
                "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;

        }

        //validation for invalid total students
        if (!ValidationUtil.isValidTotalStudents(totalStudents)) {
            JOptionPane.showMessageDialog(this, "Invalid Total Students. It must contain only digits.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Create new MooveModel object
        MooveModel newSchedule = new MooveModel(
            Integer.parseInt(serialNo),
            className,
            Short.parseShort(age),
            skillLevel,
            startTime,
            endTime,
            instructor,
            Integer.parseInt(totalStudents)
        );

        // Add the new schedule to the list (IMPORTANT)
        scheduleList.add(newSchedule);

        // Add the new row to the table
        model.addRow(new Object[]{
            newSchedule.getSerialNo(),
            newSchedule.getClassName(),
            newSchedule.getStartTime(),
            newSchedule.getEndTime(),
            newSchedule.getSkillLevel(),
            newSchedule.getAge(),
            newSchedule.getTotalStudents(),
            newSchedule.getInstructor()
        });

        JOptionPane.showMessageDialog(this, "Student Registered Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        clearFields(); // Clear input fields after adding
    }//GEN-LAST:event_addBtnActionPerformed

    /**
     *The method helps to populate the table with the list of data.
     * This method populates the table with the data from a list of MooveModel object.
     */
    private void addToTable(List<MooveModel> scheduleList) {
        DefaultTableModel model = (DefaultTableModel) tblSchedule.getModel();
        model.setRowCount(0); // Clears all existing rows

        // Add new rows to the table
        scheduleList.forEach(schedule -> model.addRow(new Object[]{
            schedule.getSerialNo(),
            schedule.getClassName(),
            schedule.getStartTime(),
            schedule.getEndTime(),
            schedule.getSkillLevel(),
            schedule.getAge(),
            schedule.getTotalStudents(),
            schedule.getInstructor()
        }));
    }

    /**
     * The method sets up a layout to organize the screens.
     */
    private void initializeLayout() {
        //initializing card layout
        /**
         * card layout is used when the user wants to switch between multiple components simultaneously
         * so that only one component is visible at one time.
         */
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add panels with unique identifiers
        getContentPane().add(pnlLoadingScreen, "LoadingScreen");
        getContentPane().add(pnlLoginScreen, "LoginScreen");
        getContentPane().add(pnlMainScreen, "MainScreen");

        // Start with the loading screen
        loadScreen("LoadingScreen");
    }

    /**
     * This method helps to initialize data into the linked list that is already connected to the table.
     * This data will appear automatically in the table.
     */
    // Method to initialize data, including schedule list and table
    private void initializeData() {
        scheduleList = new LinkedList<>();
        registerSchedule(new MooveModel(1, "Hip-Hop", (short) 18,
                "Beginner", "09:00 AM", "10:00 AM", "Enzo Bryant", 20));
        registerSchedule(new MooveModel(2, "Contemporary", (short) 22,
                "Intermediate", "01:00 PM", "02:00 PM", "Colby Lester", 15));
        registerSchedule(new MooveModel(3, "Ballet", (short) 22,
                "Intermediate", "11:00 AM", "02:00 PM", "Tatiana logan", 25));
        registerSchedule(new MooveModel(4, "The Robot", (short) 22,
                "Advanced", "09:00 PM", "10:00 PM", "Arron Cox", 15));
        registerSchedule(new MooveModel(5, "Waccking", (short) 22,
                "Beginner", "01:00 PM", "02:00 PM", "Fay Joyce", 15));
    }

    /**
     * This method is used to start the progress of the progress bar.
     * The method displays the loading process of the abr from 1% to 100%
     */
    // Method to simulate loading progress
    private void startProgress() {
        
            javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
                @Override
                protected Void doInBackground() throws Exception {
                    for (int i = 0; i <= 100; i++) {
                        Thread.sleep(30); // Simulated delay for progress bar
                        publish(i);
                    }
                    return null;
                }

                @Override
                protected void process(java.util.List<Integer> chunks) {
                    int progress = chunks.get(chunks.size() - 1);
                    pgBarSplashScreen.setValue(progress);

                pgBarSplashScreen.setString(progress + "%"); // Display progress as a percentage
                }

                @Override
                protected void done() {
                    loadScreen("LoginScreen"); // Switch to login screen
                }
            };
            worker.execute();
    }

    /**
     * This method helps to automatically add the instructor when a class is selected.
     */
    private void setupComboBoxListener() {//Method to set up the action for the combo box
        comboClassName.addItemListener((java.awt.event.ItemEvent evt) -> { //adding an event listener and firing an event when selection is changed
            if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {//checks whether an event is selected or not
                String selectedClass = comboClassName.getSelectedItem().toString();//retrieves the item selected and converts the object to string
                switch (selectedClass) {
                    case "Ballet" ->//if ballet is selected then the instructor field is filled with the predefined instructor
                        txtFldInstructor.setText("Tatiana Logan");
                    case "Hip-Hop" ->
                        txtFldInstructor.setText("Zakaria Baxter");
                    case "Contemporary" ->
                        txtFldInstructor.setText("Colby Lester");
                    case "The Robot" ->
                        txtFldInstructor.setText("Arron Cox");
                    case "Waacking" ->
                        txtFldInstructor.setText("Fay Joyce");
                    case "B-Boying" ->
                        txtFldInstructor.setText("Enzo Bryant");
                    default ->
                        txtFldInstructor.setText(""); // Clear the field if no match
                }
            }
        });
    }

    /**
     * This method adds new data into the list and updates the table. 
     *  
     */
    private void registerSchedule(MooveModel schedule) {
        scheduleList.add(schedule); 
        DefaultTableModel model = (DefaultTableModel) tblSchedule.getModel();
        model.addRow(new Object[]{//adding new rows to the table
            schedule.getSerialNo(), // S. NO.
            schedule.getClassName(), // Class Name
            schedule.getStartTime(), // Start Time
            schedule.getEndTime(), // End Time
            schedule.getSkillLevel(), // Skill Level
            schedule.getAge(), // Age
            schedule.getTotalStudents(), // Total Students
            schedule.getInstructor() // Instructor
        });
    }

    /**
     * This method clears all the field.
     */
    private void clearFields() {
        txtFldSerialNo.setText("");
        txtFldStartTime.setText("");
        txtFldAge.setText("");
        txtFldEndTime.setText("");
        txtFldInstructor.setText("");
        txtFldTotalStudents.setText("");
    }

    // Method to switch screens
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MooveApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        MooveApp app = new MooveApp();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            app.setVisible(true);
        });

        app.startProgress();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane MainPane;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnLoginIn;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSortAge;
    private javax.swing.JButton btnSortInstructors;
    private javax.swing.JButton btnSortSno;
    private javax.swing.JComboBox<String> comboClassName;
    private javax.swing.JComboBox<String> comboSkill;
    private javax.swing.JButton deletebtn;
    private javax.swing.JLabel imgLoadingpglbl1;
    private javax.swing.JLabel imgLoadingpglbl2;
    private javax.swing.JLabel imgLoadingpglbl3;
    private javax.swing.JLabel imgLoadingpglbl4;
    private javax.swing.JScrollPane jScrollPaneSchedulePane;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblBalletFeetImg;
    private javax.swing.JLabel lblFounderName;
    private javax.swing.JLabel lblGIFLoadingpg1;
    private javax.swing.JLabel lblImageHomepg1;
    private javax.swing.JLabel lblImgarrow1;
    private javax.swing.JLabel lblImgarrow2;
    private javax.swing.JLabel lblImgarrow3;
    private javax.swing.JLabel lblImgarrow4;
    private javax.swing.JLabel lblImgarrow5;
    private javax.swing.JLabel lblImgarrow6;
    private javax.swing.JLabel lblImgbutton1;
    private javax.swing.JLabel lblImgbutton2;
    private javax.swing.JLabel lblImgbutton3;
    private javax.swing.JLabel lblImgbutton4;
    private javax.swing.JLabel lblImgbutton5;
    private javax.swing.JLabel lblImgbutton6;
    private javax.swing.JLabel lblImgface1;
    private javax.swing.JLabel lblImgface2;
    private javax.swing.JLabel lblImgface3;
    private javax.swing.JLabel lblImgface4;
    private javax.swing.JLabel lblImgface5;
    private javax.swing.JLabel lblImgface6;
    private javax.swing.JLabel lblInstructorname1;
    private javax.swing.JLabel lblInstructorname2;
    private javax.swing.JLabel lblInstructorname3;
    private javax.swing.JLabel lblInstructorname4;
    private javax.swing.JLabel lblInstructorname5;
    private javax.swing.JLabel lblInstructorname6;
    private javax.swing.JLabel lblLoginError;
    private javax.swing.JLabel lblLoginForgotPwd;
    private javax.swing.JLabel lblLoginSubTitle;
    private javax.swing.JLabel lblLoginTitle;
    private javax.swing.JLabel lblLogoMoove;
    private javax.swing.JLabel lblMoovename;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblQuote1;
    private javax.swing.JLabel lblQuote2;
    private javax.swing.JLabel lblQuote3;
    private javax.swing.JLabel lblQuote4;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblWelcoming;
    private javax.swing.JProgressBar pgBarSplashScreen;
    private javax.swing.JPanel pnlAboutUs;
    private javax.swing.JPanel pnlAboutUsImg1;
    private javax.swing.JPanel pnlData;
    private javax.swing.JPanel pnlDescMoove;
    private javax.swing.JPanel pnlHome;
    private javax.swing.JPanel pnlInstructor1;
    private javax.swing.JPanel pnlInstructor2;
    private javax.swing.JPanel pnlInstructor3;
    private javax.swing.JPanel pnlInstructor4;
    private javax.swing.JPanel pnlInstructor5;
    private javax.swing.JPanel pnlInstructor6;
    private javax.swing.JPanel pnlInstructors;
    private javax.swing.JPanel pnlLoadingScreen;
    private javax.swing.JPanel pnlLoadingpg1;
    private javax.swing.JPanel pnlLoginScreen;
    private javax.swing.JPanel pnlLoginScreen1;
    private javax.swing.JPanel pnlMainScreen;
    private javax.swing.JPanel pnlMainTitle;
    private javax.swing.JPanel pnlRegister;
    private javax.swing.JPanel pnlSchedule;
    private javax.swing.JPasswordField pwdFldLogin;
    private javax.swing.JTable tblSchedule;
    private javax.swing.JTextField txtFldAge;
    private javax.swing.JTextField txtFldEndTime;
    private javax.swing.JTextField txtFldInstructor;
    private javax.swing.JTextField txtFldLoginUsername;
    private javax.swing.JTextField txtFldSearch;
    private javax.swing.JTextField txtFldSerialNo;
    private javax.swing.JTextField txtFldStartTime;
    private javax.swing.JTextField txtFldTotalStudents;
    private javax.swing.JLabel txtLoadingpglabel1;
    private javax.swing.JLabel txtLoadingpglabel2;
    private javax.swing.JLabel txtLoadingpglabel3;
    private javax.swing.JLabel txtLoadingpglabel5;
    private javax.swing.JLabel txtLoadingpglabel6;
    private javax.swing.JLabel txtLoadingpglabel7;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables

}
